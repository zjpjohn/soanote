======================================================================================================================
        1、springboot
======================================================================================================================
1：springboot介绍：
    1.1：Spring Boot是在spring4.x框架基础上再包了一层，这一层包含方便开发者进行配置管理和快速开发的模块，以及提供了一些开箱即用的工具，比如监控等。
    1.2：@SpringBootApplication相当于@Configuration、@EnableAutoConfiguration和  @ComponentScan，你也可以同时使用这3个注解。其中@Configuration、
        @ComponentScan是spring框架的语法，在spring 3.x就有了，用于代码方式创建配置信息和扫描包。@EnableAutoConfiguration是spring boot语法，表示将使用自动
        配置。你如果下载了spring boot源码，就会看到spring boot实现了很多starter应用，这些starter就是一些配置信息（有点类似于docker，一组环境一种应用的概念）
        ，spring boot看到引入的starter包，就可以计算如何自动配置你的应用。
    1.3：spring boot封装所有配置信息为键值类型，你想改变默认配置，只需要向应用传入这个键值对就可以，比如我们想改变绑定端口为8081，那么你在main方法里传入
        “—server.port=8081”即可，或者干脆使用：SpringApplication.run(SampleController.class, "--server.port=8081");
    1.4：pom文件中看到的spring-boot-maven-plugin插件就是打包spring boot应用的，打包完后才可以运行spring boot应用。
2：Spring boot提供的开箱即用的应用---比如监控：
    2.1：一个springboot应用如果想开启对他监控，需要在他的pom中引入<artifactId>spring-boot-starter-actuator</artifactId>，引入之后，spring boot是默认开启监
        控的，运行应用你可以在浏览器中输入：http://localhost:8080/health(访问应用的后面加/health)，就可以看到默认的监控信息了,信息包括程序执行状态以及基本
        的磁盘信息。